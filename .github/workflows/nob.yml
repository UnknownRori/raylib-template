name: Nob

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      # Set fail-fast to false to ensure that feedback is delivered for all matrix combinations. Consider changing this to true when your workflow is stable.
      fail-fast: false

      # Set up a matrix to run the following 3 configurations:
      # 1. <Windows, Release, latest MSVC compiler toolchain on the default runner image, default generator>
      # 2. <Linux, Release, latest GCC compiler toolchain on the default runner image, default generator>
      # 3. <Linux, Release, latest Clang compiler toolchain on the default runner image, default generator>
      #
      # To add more build types (Release, Debug, RelWithDebInfo, etc.) customize the build_type list.
      matrix:
        os: [ubuntu-latest, windows-latest]
        build_type: [Release]
        c_compiler: [gcc, clang, cl]
        include:
          - os: windows-latest
            c_compiler: gcc
            cpp_compiler: g++
          - os: ubuntu-latest
            c_compiler: gcc
            cpp_compiler: g++
          - os: ubuntu-latest
            c_compiler: clang
            cpp_compiler: clang++
        exclude:
          - os: windows-latest
            c_compiler: gcc
          - os: windows-latest
            c_compiler: clang
          - os: ubuntu-latest
            c_compiler: cl

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Install GCC on Windows
      if: ${{ matrix.os == 'windows-latest' }}
      run: |
        choco install msys2 --no-progress
        refreshenv
        set MSYS2_PATH_TYPE=inherit
        C:\tools\msys64\usr\bin\bash -lc "pacman -Sy --noconfirm mingw-w64-x86_64-gcc make"
        echo "C:\\tools\\msys64\\mingw64\\bin" >> $GITHUB_PATH


    - name: Install dependencies on Linux
      if: ${{ matrix.os == 'ubuntu-latest' }}
      run: |
        sudo apt update
        sudo apt install libasound2-dev libx11-dev libxrandr-dev libxi-dev libgl1-mesa-dev libglu1-mesa-dev libxcursor-dev libxinerama-dev libwayland-dev libxkbcommon-dev


    - name: Build Build System
      # Build your program with the given configuration. Note that --config is needed because the default Windows generator is a multi-config generator (Visual Studio generator).
      working-directory: ${{ github.workspace }}
      run: gcc ./nob.c -o nob

    - name: Build Desktop
      # Build your program with the given configuration. Note that --config is needed because the default Windows generator is a multi-config generator (Visual Studio generator).
      working-directory: ${{ github.workspace }}
      run: ./nob desktop

    - name: Upload Build Artifact
      # Upload the build output as an artifact
      if: ${{ matrix.os == 'windows-latest' }}
      uses: actions/upload-artifact@v4
      with:
        name: nob-build-${{ matrix.os }}-${{ matrix.build_type }}
        path: ./dist
    - name: Upload Build Artifact
      # Upload the build output as an artifact
      if: ${{ matrix.os == 'ubuntu-latest' }}
      uses: actions/upload-artifact@v4
      with:
        name: nob-build-${{ matrix.os }}-${{ matrix.build_type }}
        path: ./dist
